# Unified Agent Definitions - Complete Fusion System
version: "3.0"
name: "Unified Multi-Agent System"
methodology: "KID + Governor Fusion"

agents:
  # ============================================================================
  # TIER 0+: SUPREME ORCHESTRATION
  # ============================================================================
  
  fusion-orchestrator:
    tier: "T0+"
    name: "Fusion Orchestrator Supreme"
    description: "Ultimate coordinator bridging KID and Governor methodologies"
    capabilities:
      - methodology_bridging
      - supreme_orchestration
      - conflict_resolution
      - evolution_management
    responsibilities:
      - Initialize both methodologies
      - Map protocols between systems
      - Resolve methodology conflicts
      - Manage system evolution
    triggers:
      - system_initialization
      - major_architectural_decisions
      - methodology_conflicts
      - evolution_thresholds
    inputs:
      - user_requests
      - system_state
      - methodology_configs
    outputs:
      - orchestration_plans
      - conflict_resolutions
      - evolution_reports
    rules:
      - Always prioritize Governor master rules
      - Enable pattern learning within constraints
      - Maintain perfect audit trail
    metrics:
      - fusion_efficiency
      - conflict_resolution_time
      - evolution_rate

  # ============================================================================
  # TIER 0: META ORCHESTRATION
  # ============================================================================
  
  meta-orchestrator:
    tier: "T0"
    name: "Meta Orchestrator"
    description: "Strategic oversight and multi-project coordination"
    capabilities:
      - multi_project_management
      - resource_allocation
      - strategic_planning
      - cross_project_optimization
    responsibilities:
      - Monitor all active projects
      - Allocate computational resources
      - Detect cross-project synergies
      - Maintain global coherence
    triggers:
      - new_project_initialization
      - resource_contention
      - cross_project_dependencies
    coordination:
      with: ["fusion-orchestrator"]
      protocol: "hierarchical"

  # ============================================================================
  # TIER 1: SENIOR ENGINEERING
  # ============================================================================
  
  context-governor:
    tier: "T1"
    name: "Context Governor Engine"
    description: "Unified context management with rule enforcement"
    capabilities:
      - context_engineering
      - rule_enforcement
      - semantic_search
      - cache_optimization
    methodology_fusion:
      kid_features:
        - smart_indexing
        - embedding_search
        - snapshot_management
      governor_features:
        - rule_based_filtering
        - architectural_context
        - immutable_constraints
    data_sources:
      primary: ".0kid/governor/rules/"
      secondary: ".0kid/patterns/success/"
      tertiary: ".0kid/context/"
    optimization:
      cache_strategy: "LRU"
      max_context_size: 128000
      embedding_model: "text-embedding-3-large"

  pattern-governor:
    tier: "T1"
    name: "Pattern Learning Governor"
    description: "Pattern extraction with automatic rule generation"
    capabilities:
      - pattern_extraction
      - rule_generation
      - continuous_improvement
      - antipattern_detection
    fusion_protocol:
      pattern_threshold: 10
      confidence_required: 0.95
      auto_rule_generation: true
    workflows:
      extraction: ".0kid/patterns/"
      validation: ".0kid/governor/rules/"
      generation: ".0kid/governor/rules/project-rules/"
    learning_rate:
      target: ">5 patterns/week"
      rule_generation: ">1 rule/week"

  governed-coder:
    tier: "T1"
    name: "Governed Code Synthesis Engine"
    description: "Code generation with full constraint compliance"
    capabilities:
      - code_synthesis
      - pattern_application
      - constraint_compliance
      - quantum_exploration
    constraints:
      source: ".0kid/governor/rules/"
      enforcement: "mandatory"
      validation: "continuous"
    patterns:
      source: ".0kid/patterns/success/"
      application: "automatic"
      fallback: "first_principles"
    quantum_features:
      enabled: true
      variants: 3-5
      selection: "metrics_based"

  # ============================================================================
  # TIER 2: SPECIALIST AGENTS
  # ============================================================================
  
  audit-healer:
    tier: "T2"
    name: "Audit & Self-Healing Engine"
    description: "Continuous audit with automatic healing"
    capabilities:
      - continuous_audit
      - self_healing
      - antipattern_prevention
      - compliance_monitoring
    dual_mode:
      audit:
        frequency: "continuous"
        scope: "all_outputs"
        reports: ".0kid/qa_reports/"
      healing:
        max_attempts: 3
        patterns: ".0kid/healing/healing-patterns.md"
        fallback: "human_escalation"
    learning:
      success_patterns: ".0kid/patterns/success/"
      failure_patterns: ".0kid/patterns/antipatterns/"

  quantum-developer:
    tier: "T2"
    name: "Quantum Development Engine"
    description: "Parallel solution exploration within constraints"
    capabilities:
      - parallel_exploration
      - solution_optimization
      - constraint_satisfaction
      - variant_generation
    configuration:
      min_variants: 3
      max_variants: 5
      evaluation_metrics:
        - performance
        - maintainability
        - scalability
        - compliance
      selection_threshold: 0.85
    constraints:
      apply: "to_all_variants"
      source: ".0kid/governor/rules/"
      validation: "before_selection"

  performance-predictor:
    tier: "T2"
    name: "Performance Prediction Engine"
    description: "ML-based performance analysis and optimization"
    capabilities:
      - performance_prediction
      - bottleneck_detection
      - optimization_suggestion
      - capacity_planning
    analysis:
      static: "code_complexity"
      dynamic: "runtime_profiling"
      predictive: "ml_models"
    thresholds:
      response_time: "<100ms"
      memory_usage: "<512MB"
      cpu_usage: "<80%"

  chaos-engineer:
    tier: "T2"
    name: "Chaos Engineering Agent"
    description: "Proactive failure injection and resilience testing"
    capabilities:
      - failure_injection
      - resilience_testing
      - recovery_validation
      - weakness_identification
    testing:
      modes: ["network", "resource", "dependency", "data"]
      frequency: "weekly"
      environment: "staging_only"
    reporting:
      findings: ".0kid/qa_reports/chaos/"
      patterns: ".0kid/patterns/antipatterns/"

  # ============================================================================
  # SPECIALIZED FUSION AGENTS
  # ============================================================================
  
  evolution-engine:
    tier: "T1"
    name: "System Evolution Engine"
    description: "Manages system evolution and capability growth"
    capabilities:
      - capability_assessment
      - evolution_planning
      - version_management
      - migration_orchestration
    tracking:
      metrics: ".0kid/fusion/synergy-metrics.json"
      evolution: ".0kid/meta/evolution.json"
      versions: ".0kid/meta/versions.json"
    thresholds:
      minor_update: "10_new_patterns"
      major_update: "significant_architecture_change"

  cognitive-enhancer:
    tier: "T1"
    name: "Cognitive Enhancement Engine"
    description: "Enhances system intelligence through learning"
    capabilities:
      - knowledge_synthesis
      - insight_extraction
      - correlation_discovery
      - predictive_modeling
    learning_sources:
      - execution_history
      - pattern_library
      - metrics_data
      - external_knowledge
    outputs:
      insights: ".0kid/research/insights/"
      models: ".0kid/research/models/"
      predictions: ".0kid/research/predictions/"

# ============================================================================
# AGENT COORDINATION RULES
# ============================================================================

coordination:
  communication:
    protocol: "message_passing"
    format: "json"
    validation: "schema_based"
    
  hierarchy:
    T0_plus: ["fusion-orchestrator"]
    T0: ["meta-orchestrator"]
    T1: ["context-governor", "pattern-governor", "governed-coder", "evolution-engine", "cognitive-enhancer"]
    T2: ["audit-healer", "quantum-developer", "performance-predictor", "chaos-engineer"]
    
  routing:
    default: "fusion-orchestrator"
    emergency: "audit-healer"
    optimization: "pattern-governor"
    implementation: "governed-coder"
    
  collaboration:
    parallel_execution:
      enabled: true
      max_parallel: 5
      coordination: "via_context"
      
    sequential_execution:
      enabled: true
      handoff: "via_state"
      validation: "at_each_step"
      
  conflict_resolution:
    primary: "fusion-orchestrator"
    secondary: "meta-orchestrator"
    fallback: "human_operator"

# ============================================================================
# SYSTEM CONFIGURATION
# ============================================================================

configuration:
  auto_scaling:
    enabled: true
    min_agents: 3
    max_agents: 20
    scale_metric: "queue_depth"
    
  resource_limits:
    per_agent_memory: "512MB"
    per_agent_cpu: "1.0"
    total_memory: "8GB"
    total_cpu: "8.0"
    
  timeouts:
    agent_response: "30s"
    orchestration: "5m"
    emergency: "10s"
    
  retry_policy:
    max_attempts: 3
    backoff: "exponential"
    max_delay: "30s"